-- Generated by Oracle SQL Developer Data Modeler 4.2.0.921
--   at:        2017-01-09 22:10:58 CET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE danie CASCADE CONSTRAINTS;

DROP TABLE detale_zamowienia CASCADE CONSTRAINTS;

DROP TABLE klient CASCADE CONSTRAINTS;

DROP TABLE pracownik CASCADE CONSTRAINTS;

DROP TABLE sklad CASCADE CONSTRAINTS;

DROP TABLE skladnik CASCADE CONSTRAINTS;

DROP TABLE typ_pracownika CASCADE CONSTRAINTS;

DROP TABLE zamowienie CASCADE CONSTRAINTS;

CREATE TABLE danie (
    id_dania      NUMBER(3) NOT NULL,
    nazwa_dania   VARCHAR2(40) NOT NULL,
    cena_dania    NUMBER(6,2) NOT NULL
);

ALTER TABLE danie ADD CONSTRAINT danie_pk PRIMARY KEY ( id_dania );

CREATE TABLE detale_zamowienia (
    id_zamowienia   NUMBER(4) NOT NULL,
    pozycja         NUMBER(2) NOT NULL,
    id_dania        NUMBER(3) NOT NULL,
    id_pracownika   NUMBER(4) NOT NULL,
    liczba          NUMBER(3) NOT NULL,
    cena_zakupu     NUMBER(6,2) NOT NULL
);

CREATE INDEX detale_zamowienia__idx ON
    detale_zamowienia ( id_dania ASC );

ALTER TABLE detale_zamowienia ADD CONSTRAINT detale_zamowienia_pk PRIMARY KEY ( pozycja,id_zamowienia );

CREATE TABLE klient (
    id_klienta      NUMBER(5) NOT NULL,
    nazwa_klienta   VARCHAR2(60) NOT NULL,
    adres_klienta   VARCHAR2(80) NOT NULL
);

ALTER TABLE klient ADD CONSTRAINT klient_pk PRIMARY KEY ( id_klienta );

CREATE TABLE pracownik (
    id_pracownika              NUMBER(4) NOT NULL,
    id_stanowiska              NUMBER(2) NOT NULL,
    nazwa_pracownika           VARCHAR2(60) NOT NULL,
    wynagrodzenie_pracownika   NUMBER(6,2) NOT NULL
);

CREATE INDEX pracownik__idx ON
    pracownik ( id_stanowiska ASC );

ALTER TABLE pracownik ADD CONSTRAINT pracownik_pk PRIMARY KEY ( id_pracownika );

CREATE TABLE sklad (
    id_dania                NUMBER(3) NOT NULL,
    id_skladnika            NUMBER(3) NOT NULL,
    ilosc_skladnika_dania   NUMBER(1) NOT NULL
);

ALTER TABLE sklad ADD CONSTRAINT sklad_pk PRIMARY KEY ( id_dania,id_skladnika );

CREATE TABLE skladnik (
    id_skladnika      NUMBER(3) NOT NULL,
    nazwa_skladnika   VARCHAR2(50) NOT NULL
);

ALTER TABLE skladnik ADD CONSTRAINT skladnik_pk PRIMARY KEY ( id_skladnika );

CREATE TABLE typ_pracownika (
    id_stanowiska      NUMBER(2) NOT NULL,
    nazwa_stanowiska   VARCHAR2(40) NOT NULL
);

ALTER TABLE typ_pracownika ADD CONSTRAINT typ_pracownika_pk PRIMARY KEY ( id_stanowiska );

CREATE TABLE zamowienie (
    id_zamowienia        NUMBER(4)  NOT NULL,
    id_klienta           NUMBER(5)  NOT NULL,
    data_zamowienia      DATE NOT NULL,
    wartosc_zamowienia   NUMBER(6,2)  NOT NULL
);

ALTER TABLE zamowienie ADD CONSTRAINT zamowienie_pk PRIMARY KEY ( id_zamowienia );

ALTER TABLE detale_zamowienia ADD CONSTRAINT danie_fk FOREIGN KEY ( id_dania )
    REFERENCES danie ( id_dania );

ALTER TABLE sklad ADD CONSTRAINT danie_fkv2 FOREIGN KEY ( id_dania )
    REFERENCES danie ( id_dania );

ALTER TABLE zamowienie ADD CONSTRAINT klient_fk FOREIGN KEY ( id_klienta )
    REFERENCES klient ( id_klienta );

ALTER TABLE detale_zamowienia ADD CONSTRAINT pracownik_fk FOREIGN KEY ( id_pracownika )
    REFERENCES pracownik ( id_pracownika );

ALTER TABLE sklad ADD CONSTRAINT skladnik_fk FOREIGN KEY ( id_skladnika )
    REFERENCES skladnik ( id_skladnika );

ALTER TABLE pracownik ADD CONSTRAINT typ_pracownika_fk FOREIGN KEY ( id_stanowiska )
    REFERENCES typ_pracownika ( id_stanowiska );

ALTER TABLE detale_zamowienia ADD CONSTRAINT zamowienie_fk FOREIGN KEY ( id_zamowienia )
    REFERENCES zamowienie ( id_zamowienia );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             2
-- ALTER TABLE                             15
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

--LADOWANIE DANYCH STALYCH ZA POMOCA INSERT

INSERT INTO TYP_PRACOWNIKA (ID_STANOWISKA, NAZWA_STANOWISKA) 
VALUES (1, 'Kucharz');
INSERT INTO TYP_PRACOWNIKA (ID_STANOWISKA, NAZWA_STANOWISKA) 
VALUES (2, 'Kelner');

INSERT INTO PRACOWNIK (ID_PRACOWNIKA, ID_STANOWISKA, NAZWA_PRACOWNIKA, WYNAGRODZENIE_PRACOWNIKA) 
VALUES (1, 1, 'Maciej Barylka', 2500.00);
INSERT INTO PRACOWNIK (ID_PRACOWNIKA, ID_STANOWISKA, NAZWA_PRACOWNIKA, WYNAGRODZENIE_PRACOWNIKA) 
VALUES (2, 1, 'Krzysztof Morawski', 1950.00);
INSERT INTO PRACOWNIK (ID_PRACOWNIKA, ID_STANOWISKA, NAZWA_PRACOWNIKA, WYNAGRODZENIE_PRACOWNIKA) 
VALUES (3, 2, 'Alojzy Opania', 1700.00);
INSERT INTO PRACOWNIK (ID_PRACOWNIKA, ID_STANOWISKA, NAZWA_PRACOWNIKA, WYNAGRODZENIE_PRACOWNIKA) 
VALUES (4, 2, 'Marcin Korytko', 1700.00);

INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (1.0, 'Mozzarella');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (2.0, 'Parmezan');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (3.0, 'Cheddar');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (4.0, 'Ser Plesniowy');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (5.0, 'Szynka');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (6.0, 'Pieczarki');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (7.0, 'Ananas');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (8.0, 'Sos Pomidorowy');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (9.0, 'Makaron');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (10.0, 'Mieso Wolowe');
INSERT INTO skladnik (ID_SKLADNIKA, NAZWA_SKLADNIKA) 
VALUES (11.0, 'Boczek');

INSERT INTO DANIE (ID_DANIA, NAZWA_DANIA, CENA_DANIA) 
VALUES (1.0, 'Pizza Margeritha', 14.5);
INSERT INTO DANIE (ID_DANIA, NAZWA_DANIA, CENA_DANIA) 
VALUES (2.0, 'Pizza Prosciutto', 17.8);
INSERT INTO DANIE (ID_DANIA, NAZWA_DANIA, CENA_DANIA) 
VALUES (3.0, 'Pizza Hawajska', 18.0);
INSERT INTO DANIE (ID_DANIA, NAZWA_DANIA, CENA_DANIA) 
VALUES (4.0, 'Pizza Serowa', 16.5);
INSERT INTO DANIE (ID_DANIA, NAZWA_DANIA, CENA_DANIA) 
VALUES (5.0, 'Spaghetti Bolognese', 15.99);
INSERT INTO DANIE (ID_DANIA, NAZWA_DANIA, CENA_DANIA) 
VALUES (6.0, 'Spaghetti Carbonara', 16.99);

INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (1.0,1.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (1.0,8.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (2.0,1.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (2.0,5.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (2.0,6.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (2.0,8.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (3.0,1.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (3.0,5.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (3.0,7.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (3.0,8.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (4.0,1.0,2.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (4.0,2.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (4.0,3.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (4.0,4.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (4.0,8.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (5.0,8.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (5.0,9.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (5.0,10.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (6.0,2.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (6.0,9.0,1.0);
INSERT INTO sklad (ID_DANIA, ID_SKLADNIKA, ILOSC_SKLADNIKA_DANIA) VALUES (6.0,11.0,1.0);

INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (1.0, 'Adrian Ciok', 'Grabianowska 5 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (2.0, 'Jakub Ciok', 'Teodorów 5 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (3.0, 'Maria Górska', 'Warszawska 80 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (4.0, 'Bogdan Górski', 'Warszawska 80 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (5.0, 'Natalia Prontek', 'Pi³sudskiego 56/90 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (6.0, 'Marek Lapiñski', 'Platynowa 5/30 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (7.0, 'Alicja Wyrzykowska', 'Moniuszki 30 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (8.0, 'Adrian £aski', 'Niepodleg³oci 10/3 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (9.0, 'Katarzyna Pasikonik', 'Wyszyñskiego 8/13 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (10.0, 'Kamil Boberek', 'Ogiñskich 13 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (11.0, 'Marek S³owak', '¯elków-Kolonia 13 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (12.0, 'Leszek Chmielewski', 'Unitów Podlaskich 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (13.0, 'Stefan Górzyñski', 'Kropelkowa 70/3 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (14.0, 'Andrzej Wróblewski', 'Sw Krolowej Jadwigi 22a 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (15.0, 'Dawid Tokarzewski', 'Uroczysko 13 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (16.0, 'Piotr Pogorzelski', 'Katedralna 90/90 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (17.0, 'Karolina Smoliñska', 'Powstañców l¹skich 87/100 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (18.0, 'Dagmara Góra-Sawicka', 'Unitów Podlaskich 23/3 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (19.0, 'Joanna Pa³asz', 'Romanówka 1/32 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (20.0, 'Maciej Turkowski', 'Maczka 13/3 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (21.0, 'Jagoda Debowska', 'Konarskiego 12 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (22.0, 'Michal Jaworski', 'Pomorska 3/23 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (23.0, 'Arkadiusz Jaworski', 'Pomorska 3/23 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (24.0, 'Tomasz Chada', 'Daszynskiego 20/32 08-110 Siedlce');
INSERT INTO KLIENT (ID_KLIENTA, NAZWA_KLIENTA, ADRES_KLIENTA) 
VALUES (25.0, 'Kinga Ksiezna', 'Weterynaryjna 12 08-110 Siedlce');

--FUNKCJE I PROCEDURY

CREATE SEQUENCE SEQ_ID_ZAMOWIENIA
MINVALUE 1
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE FUNCTION FN_LOSUJ(V_MAX NUMBER)
RETURN NUMBER AS
  V_WYLOSOWANA NUMBER;
BEGIN
  V_WYLOSOWANA := ROUND(DBMS_RANDOM.VALUE(1,v_max));
RETURN V_WYLOSOWANA;
END FN_LOSUJ;
/
create or replace FUNCTION FN_LOSUJ_DANIE 
RETURN NUMBER AS V_WYLOSOWANA NUMBER;
V_MIN NUMBER;
V_MAX NUMBER;
BEGIN
  SELECT MIN(DANIE.ID_DANIA) INTO V_MIN FROM DANIE;
  SELECT MAX(DANIE.ID_DANIA) INTO V_MAX FROM DANIE;
    V_WYLOSOWANA := ROUND(DBMS_RANDOM.VALUE(V_MIN,V_MAX));
  RETURN V_WYLOSOWANA;
END FN_LOSUJ_DANIE;
/
create or replace FUNCTION FN_LOSUJ_KLIENTA 
RETURN NUMBER AS V_WYLOSOWANY_KLIENT NUMBER;
V_MIN NUMBER;
V_MAX NUMBER;
BEGIN
  SELECT MIN(ID_KLIENTA) INTO  V_MIN FROM KLIENT;
  SELECT MAX(ID_KLIENTA) INTO V_MAX FROM KLIENT;
  V_WYLOSOWANY_KLIENT := ROUND(DBMS_RANDOM.VALUE(V_MIN,V_MAX));
  RETURN V_WYLOSOWANY_KLIENT;
END FN_LOSUJ_KLIENTA;
/
CREATE OR REPLACE FUNCTION FN_SUMA 
(
  V_ID_ZAMOWIENIA IN NUMBER 
) RETURN NUMBER AS V_WARTOSC_ZAMOWIENIA NUMBER;
BEGIN
  SELECT SUM(CENA_ZAKUPU) INTO V_WARTOSC_ZAMOWIENIA FROM DETALE_ZAMOWIENIA
    WHERE ID_ZAMOWIENIA = V_ID_ZAMOWIENIA;
  RETURN V_WARTOSC_ZAMOWIENIA;
END FN_SUMA;
/
create or replace FUNCTION FN_LOSUJ_KUCHARZA 
RETURN NUMBER AS V_ID_KUCHARZA NUMBER;
V_MIN NUMBER;
V_MAX NUMBER;
BEGIN
  SELECT MIN(ID_PRACOWNIKA) INTO V_MIN FROM PRACOWNIK WHERE ID_STANOWISKA = 1;
  SELECT MAX(ID_PRACOWNIKA) INTO V_MAX FROM PRACOWNIK WHERE ID_STANOWISKA = 1;
  V_ID_KUCHARZA := ROUND(DBMS_RANDOM.VALUE(V_MIN,V_MAX));
  RETURN V_ID_KUCHARZA;
END FN_LOSUJ_KUCHARZA;
/
create or replace PROCEDURE PR_GENERUJ_ZAMOWIENIA 
AS 
ID_ZAM NUMBER;
ILOSC_POZYCJI NUMBER;
POZYCJA NUMBER;
V_ID_DANIA NUMBER;
V_ID_KLIENTA NUMBER;
ID_KUCHARZA NUMBER;
LICZBA NUMBER;
CENA NUMBER;
BEGIN
FOR a in 1..3 LOOP
  ID_ZAM := SEQ_ID_ZAMOWIENIA.nextval;
  ILOSC_POZYCJI := FN_LOSUJ(4);
  POZYCJA := 1;
  V_ID_KLIENTA := FN_LOSUJ_KLIENTA();
   INSERT INTO ZAMOWIENIE
    VALUES(ID_ZAM,V_ID_KLIENTA,CURRENT_DATE,0);
  FOR b IN 1..ILOSC_POZYCJI LOOP
    V_ID_DANIA := FN_LOSUJ_DANIE();
   LICZBA := FN_LOSUJ(3);
   SELECT CENA_DANIA INTO CENA FROM DANIE WHERE ID_DANIA = V_ID_DANIA;
   INSERT INTO DETALE_ZAMOWIENIA
     VALUES(ID_ZAM,POZYCJA,V_ID_DANIA,FN_LOSUJ_KUCHARZA(),LICZBA,LICZBA*CENA);
   POZYCJA := POZYCJA +1;
   END LOOP;
  UPDATE ZAMOWIENIE SET WARTOSC_ZAMOWIENIA = FN_SUMA(ID_ZAM) WHERE ID_ZAMOWIENIA = ID_ZAM;
END LOOP;
DBMS_MVIEW.REFRESH('ZYSK_STYCZNIOWY');
DBMS_MVIEW.REFRESH('ZYSK_STYCZNIOWY_SZCZEGOLY');
DBMS_MVIEW.REFRESH('KTO_PRZYGOTOWAL_DANIE');
END PR_GENERUJ_ZAMOWIENIA;
/
CREATE MATERIALIZED VIEW ZYSK_STYCZNIOWY AS
SELECT SUM(CENA_ZAKUPU) AS "ZYSK W STYCZNIU", SUM(LICZBA) AS "ILOSC SPRZEDANYCH DAÑ"
FROM ZAMOWIENIE,DETALE_ZAMOWIENIA
WHERE ZAMOWIENIE.ID_ZAMOWIENIA = DETALE_ZAMOWIENIA.ID_ZAMOWIENIA
AND EXTRACT(MONTH FROM DATA_ZAMOWIENIA) = 1;
/
CREATE MATERIALIZED VIEW  ZYSK_STYCZNIOWY_SZCZEGOLY AS
SELECT DISTINCT DETALE_ZAMOWIENIA.ID_DANIA AS "NUMER DANIA", NAZWA_DANIA AS "NAZWA DANIA", SUM(CENA_ZAKUPU) AS "SUMA ZYSKU", SUM(LICZBA) AS "ILOSC SPRZEDANYCH DAN"
FROM ZAMOWIENIE, DETALE_ZAMOWIENIA, DANIE
WHERE DETALE_ZAMOWIENIA.ID_ZAMOWIENIA = ZAMOWIENIE.ID_ZAMOWIENIA
AND DETALE_ZAMOWIENIA.ID_DANIA = DANIE.ID_DANIA
AND EXTRACT(MONTH FROM DATA_ZAMOWIENIA) = 1
GROUP BY DETALE_ZAMOWIENIA.ID_DANIA, NAZWA_DANIA
ORDER BY DETALE_ZAMOWIENIA.ID_DANIA ASC;
/
CREATE MATERIALIZED VIEW KTO_PRZYGOTOWAL_DANIE AS
SELECT NAZWA_PRACOWNIKA AS "IMIE I NAZWISKO KUCHARZA", ID_ZAMOWIENIA AS "NUMER ZAMOWIENIA", POZYCJA AS "POZYCJA ZAMOWIENIA", NAZWA_DANIA AS "NAZWA DANIA" FROM PRACOWNIK,DETALE_ZAMOWIENIA, DANIE
WHERE DETALE_ZAMOWIENIA.ID_PRACOWNIKA = PRACOWNIK.ID_PRACOWNIKA AND DETALE_ZAMOWIENIA.ID_DANIA = DANIE.ID_DANIA
ORDER BY ID_ZAMOWIENIA ASC;
/
CREATE OR REPLACE VIEW ZYSK_DZISIEJSZY AS
SELECT CURRENT_DATE AS "DATA", SUM(CENA_ZAKUPU) AS "ZYSK DZISIEJSZY", SUM(LICZBA) AS "ILOSC SPRZEDANYCH DAÑ"
FROM ZAMOWIENIE,DETALE_ZAMOWIENIA
WHERE ZAMOWIENIE.ID_ZAMOWIENIA = DETALE_ZAMOWIENIA.ID_ZAMOWIENIA
AND TRUNC(DATA_ZAMOWIENIA) = TRUNC(CURRENT_DATE);
/
CREATE OR REPLACE VIEW ZYSK_DZISIEJSZY_SZCZEGOLY AS
SELECT DISTINCT CURRENT_DATE AS "DATA", DETALE_ZAMOWIENIA.ID_DANIA AS "NUMER DANIA", NAZWA_DANIA AS "NAZWA DANIA", SUM(CENA_ZAKUPU) AS "SUMA ZYSKU", SUM(LICZBA) AS "ILOSC SPRZEDANYCH DAN"
FROM ZAMOWIENIE, DETALE_ZAMOWIENIA, DANIE
WHERE DETALE_ZAMOWIENIA.ID_ZAMOWIENIA = ZAMOWIENIE.ID_ZAMOWIENIA
AND DETALE_ZAMOWIENIA.ID_DANIA = DANIE.ID_DANIA
AND TRUNC(DATA_ZAMOWIENIA) = TRUNC(CURRENT_DATE)
GROUP BY DETALE_ZAMOWIENIA.ID_DANIA, NAZWA_DANIA
ORDER BY DETALE_ZAMOWIENIA.ID_DANIA ASC;
/
CREATE OR REPLACE VIEW ZAM_KLIENCI_WART_DZISIAJ AS
SELECT CURRENT_DATE as "DATA", ID_ZAMOWIENIA AS "NUMER ZAMOWIENIA", NAZWA_KLIENTA AS "IMIE I NAZWISKO KLIENTA", ADRES_KLIENTA AS "ADRES KLIENTA", WARTOSC_ZAMOWIENIA AS "WARTOSC ZAMOWIENIA"
FROM ZAMOWIENIE, KLIENT
WHERE ZAMOWIENIE.ID_KLIENTA = KLIENT.ID_KLIENTA
AND TRUNC(DATA_ZAMOWIENIA) = TRUNC(CURRENT_DATE)
ORDER BY ID_ZAMOWIENIA ASC;
/
CREATE OR REPLACE TRIGGER DEL_ZAMOWIENIE
BEFORE DELETE ON ZAMOWIENIE 
FOR EACH ROW 
BEGIN
  DELETE FROM DETALE_ZAMOWIENIA
  WHERE ID_ZAMOWIENIA = :OLD.ID_ZAMOWIENIA;
END;
/
BEGIN
  DBMS_SCHEDULER.CREATE_JOB (
   job_name           =>  'GENERATOR_ZAMOWIEN',
   job_type           =>  'STORED_PROCEDURE',
   job_action         =>  'PR_GENERUJ_ZAMOWIENIA',
   start_date         =>  SYSDATE,
   repeat_interval    =>  'FREQ=HOURLY;INTERVAL=6',
   auto_drop          =>   FALSE,
   comments           =>  'GENERATOR ZAMOWIEN CO 6H');
dbms_scheduler.ENABLE('GENERATOR_ZAMOWIEN');
END;

